// learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // These are for our alpine docker container
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// https://authjs.dev/getting-started/adapters/prisma#installation
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// https://authjs.dev/getting-started/adapters/prisma#installation
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

// https://authjs.dev/getting-started/adapters/prisma#installation
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// https://authjs.dev/getting-started/adapters/prisma#installation
model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}